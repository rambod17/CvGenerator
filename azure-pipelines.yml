# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  projects: '**/*.csproj'
  unitests: '**/*.Tests.csproj'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: 'restore'
    projects: '$(projects)'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: 'build'
    arguments: '--no-restore --configuration $(buildConfiguration)'
    projects: '$(projects)'

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    arguments: '--configuration $(BuildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=$(Build.SourcesDirectory)\TestResults\Coverage\ --collect "Code coverage" --logger trx'
    projects: '$(unitests)'

# - script: dotnet tool install -g dotnet-reportgenerator-globaltool
#   displayName: ReportGeneratorInstall

# - script: reportgenerator "-reports:$(Build.SourcesDirectory)/**/coverage.opencover.xml" "-targetdir:$(Build.SourcesDirectory)/CodeCoverage" "-reporttypes:HtmlInline_AzurePipelines;Cobertura"
#   displayName: ReportGeneratorRun

# - task: PublishCodeCoverageResults@1
#   displayName: 'Publish Code Coverage'
#   inputs:
#     codeCoverageTool: Cobertura
#     summaryFileLocation: '$(Build.SourcesDirectory)/CodeCoverage/Cobertura.xml'
#     reportDirectory: '$(Build.SourcesDirectory)/CodeCoverage'